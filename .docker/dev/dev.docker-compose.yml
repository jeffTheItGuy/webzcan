services:
  frontend-dev:
    build:
      context: ../../
      dockerfile: .docker/dev/devfrontend.Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    volumes:
      - type: bind
        source: ../../
        target: /workspace
        consistency: cached
    working_dir: /workspace
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_BASE_URL=http://localhost:8000
    command: tail -f /dev/null
    depends_on:
      - backend-dev

  backend-dev:
    build:
      context: ../../
      dockerfile: .docker/dev/devbackend.Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    volumes:
      - type: bind
        source: ../../
        target: /workspace
        consistency: cached
    working_dir: /workspace
    ports:
      - "8000:8000"
    environment:
      - ZAP_URL=http://web-zcan-zap:8090
      - ZAP_API_KEY=
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8000
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
      - DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
    command: tail -f /dev/null


  zap:
    image: zaproxy/zap-bare:latest
    container_name: web-zcan-zap
    ports:
      - "8090:8090"
    command: >
      zap.sh -daemon
      -host 0.0.0.0
      -port 8090
      -config api.disablekey=true
      -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/JSON/core/view/version/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s




volumes:
  zap-data:
    driver: local

    
